// <auto-generated />
using System;
using EliteAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EliteAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EliteAPI.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DiscordAccountId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DiscordAccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.DiscordAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DiscordAccounts");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int?>("MemberId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.PlayerData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MonthlyPackageRank")
                        .HasColumnType("text");

                    b.Property<string>("NewPackageRank")
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .HasColumnType("text");

                    b.Property<string>("RankPlusColor")
                        .HasColumnType("text");

                    b.Property<string>("SocialMedia")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayerData");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GameMode")
                        .HasColumnType("text");

                    b.Property<string>("MinecraftAccountId")
                        .HasColumnType("text");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileUUID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MinecraftAccountId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.MinecraftAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int?>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlayerDataId")
                        .HasColumnType("integer");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("PlayerDataId");

                    b.ToTable("MinecraftAccounts");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Premium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("PremiumUsers");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("PremiumId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PurchaseType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PurchasedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PremiumId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Account", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.DiscordAccount", "DiscordAccount")
                        .WithMany()
                        .HasForeignKey("DiscordAccountId");

                    b.Navigation("DiscordAccount");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Collection", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Hypixel.Member", null)
                        .WithMany("Collections")
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Member", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Hypixel.Profile", "Profile")
                        .WithMany("Members")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Profile", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.MinecraftAccount", null)
                        .WithMany("Profiles")
                        .HasForeignKey("MinecraftAccountId");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.MinecraftAccount", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Account", null)
                        .WithMany("MinecraftAccounts")
                        .HasForeignKey("AccountId");

                    b.HasOne("EliteAPI.Data.Models.Hypixel.PlayerData", "PlayerData")
                        .WithMany()
                        .HasForeignKey("PlayerDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerData");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Premium", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Account", "Account")
                        .WithOne("PremiumUser")
                        .HasForeignKey("EliteAPI.Data.Models.Premium", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Purchase", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Premium", null)
                        .WithMany("Purchases")
                        .HasForeignKey("PremiumId");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Account", b =>
                {
                    b.Navigation("MinecraftAccounts");

                    b.Navigation("PremiumUser");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Member", b =>
                {
                    b.Navigation("Collections");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Profile", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.MinecraftAccount", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Premium", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
