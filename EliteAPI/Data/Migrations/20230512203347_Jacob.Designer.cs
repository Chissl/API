// <auto-generated />
using System;
using EliteAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EliteAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230512203347_Jacob")]
    partial class Jacob
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EliteAPI.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscordAccountId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("DiscordAccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.DiscordAccount", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Discriminator")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DiscordAccounts");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProfileMemberId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfileMemberId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.ContestParticipation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Collected")
                        .HasColumnType("integer");

                    b.Property<int>("JacobContestId")
                        .HasColumnType("integer");

                    b.Property<int?>("JacobDataId")
                        .HasColumnType("integer");

                    b.Property<int>("MedalEarned")
                        .HasColumnType("integer");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JacobContestId");

                    b.HasIndex("JacobDataId");

                    b.ToTable("ContestParticipations");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.EarnedMedalInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Bronze")
                        .HasColumnType("integer");

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<int>("JacobDataId")
                        .HasColumnType("integer");

                    b.Property<int>("Silver")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JacobDataId")
                        .IsUnique();

                    b.ToTable("EarnedMedalInventory");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.JacobContest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Crop")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("JacobContests");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.JacobData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Participations")
                        .HasColumnType("integer");

                    b.Property<int>("ProfileMemberId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfileMemberId")
                        .IsUnique();

                    b.ToTable("JacobData");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.JacobPerks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DoubleDrops")
                        .HasColumnType("integer");

                    b.Property<int>("JacobDataId")
                        .HasColumnType("integer");

                    b.Property<int>("LevelCap")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JacobDataId")
                        .IsUnique();

                    b.ToTable("JacobPerks");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.MedalInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Bronze")
                        .HasColumnType("integer");

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<int>("JacobDataId")
                        .HasColumnType("integer");

                    b.Property<int>("Silver")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JacobDataId")
                        .IsUnique();

                    b.ToTable("MedalInventories");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.PlayerData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MonthlyPackageRank")
                        .HasColumnType("text");

                    b.Property<string>("NewPackageRank")
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .HasColumnType("text");

                    b.Property<string>("RankPlusColor")
                        .HasColumnType("text");

                    b.Property<string>("SocialMedia")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayerData");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GameMode")
                        .HasColumnType("text");

                    b.Property<int?>("MinecraftAccountId")
                        .HasColumnType("integer");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileUUID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MinecraftAccountId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.ProfileMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MinecraftAccountId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerDataId")
                        .HasColumnType("integer");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MinecraftAccountId");

                    b.HasIndex("PlayerDataId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileMembers");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.MinecraftAccount", b =>
                {
                    b.Property<int>("MinecraftAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MinecraftAccountId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlayerDataId")
                        .HasColumnType("integer");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MinecraftAccountId");

                    b.HasIndex("AccountId");

                    b.HasIndex("PlayerDataId");

                    b.ToTable("MinecraftAccounts");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Premium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("PremiumUsers");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("PremiumId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PurchaseType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PurchasedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PremiumId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Account", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.DiscordAccount", "DiscordAccount")
                        .WithMany()
                        .HasForeignKey("DiscordAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscordAccount");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Collection", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Hypixel.ProfileMember", "ProfileMember")
                        .WithMany("Collections")
                        .HasForeignKey("ProfileMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileMember");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.ContestParticipation", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Hypixel.JacobContest", "JacobContest")
                        .WithMany("Participations")
                        .HasForeignKey("JacobContestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EliteAPI.Data.Models.Hypixel.JacobData", null)
                        .WithMany("Contests")
                        .HasForeignKey("JacobDataId");

                    b.Navigation("JacobContest");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.EarnedMedalInventory", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Hypixel.JacobData", "JacobData")
                        .WithOne("EarnedMedals")
                        .HasForeignKey("EliteAPI.Data.Models.Hypixel.EarnedMedalInventory", "JacobDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JacobData");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.JacobData", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Hypixel.ProfileMember", "ProfileMember")
                        .WithOne("JacobData")
                        .HasForeignKey("EliteAPI.Data.Models.Hypixel.JacobData", "ProfileMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileMember");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.JacobPerks", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Hypixel.JacobData", "JacobData")
                        .WithOne("Perks")
                        .HasForeignKey("EliteAPI.Data.Models.Hypixel.JacobPerks", "JacobDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JacobData");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.MedalInventory", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Hypixel.JacobData", "JacobData")
                        .WithOne("Medals")
                        .HasForeignKey("EliteAPI.Data.Models.Hypixel.MedalInventory", "JacobDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JacobData");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Profile", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.MinecraftAccount", null)
                        .WithMany("Profiles")
                        .HasForeignKey("MinecraftAccountId");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.ProfileMember", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.MinecraftAccount", "Member")
                        .WithMany()
                        .HasForeignKey("MinecraftAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EliteAPI.Data.Models.Hypixel.PlayerData", "PlayerData")
                        .WithMany()
                        .HasForeignKey("PlayerDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EliteAPI.Data.Models.Hypixel.Profile", "Profile")
                        .WithMany("Members")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("PlayerData");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.MinecraftAccount", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Account", null)
                        .WithMany("MinecraftAccounts")
                        .HasForeignKey("AccountId");

                    b.HasOne("EliteAPI.Data.Models.Hypixel.PlayerData", "PlayerData")
                        .WithMany()
                        .HasForeignKey("PlayerDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerData");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Premium", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Account", "Account")
                        .WithOne("PremiumUser")
                        .HasForeignKey("EliteAPI.Data.Models.Premium", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Purchase", b =>
                {
                    b.HasOne("EliteAPI.Data.Models.Premium", null)
                        .WithMany("Purchases")
                        .HasForeignKey("PremiumId");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Account", b =>
                {
                    b.Navigation("MinecraftAccounts");

                    b.Navigation("PremiumUser");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.JacobContest", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.JacobData", b =>
                {
                    b.Navigation("Contests");

                    b.Navigation("EarnedMedals")
                        .IsRequired();

                    b.Navigation("Medals")
                        .IsRequired();

                    b.Navigation("Perks")
                        .IsRequired();
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.Profile", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Hypixel.ProfileMember", b =>
                {
                    b.Navigation("Collections");

                    b.Navigation("JacobData")
                        .IsRequired();
                });

            modelBuilder.Entity("EliteAPI.Data.Models.MinecraftAccount", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("EliteAPI.Data.Models.Premium", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
